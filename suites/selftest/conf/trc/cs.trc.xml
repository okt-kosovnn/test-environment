<?xml version="1.0"?>
<!-- SPDX-License-Identifier: Apache-2.0 -->
<!-- Copyright (C) 2020-2022 OKTET Labs Ltd. All rights reserved. -->
<test name="cs" type="package">
    <objective>Package for demonstrating minimal tests</objective>
    <iter result="PASSED">
        <test name="changed" type="script">
            <objective>Check that data change tracking works properly</objective>
            <iter result="PASSED">
                <notes/>
            </iter>
        </test>
        <test name="loop" type="script">
            <objective>Check that Loop Block Device Configuration TAPI works properly.</objective>
            <notes/>
            <iter result="PASSED">
                <arg name="env">{{{'pco_iut':IUT}}}</arg>
                <arg name="length" />
                <arg name="blockdev">loop0</arg>
                <notes/>
            </iter>
        </test>
        <test name="dir" type="script">
            <objective> Check that TA reports its directories sanely</objective>
            <notes/>
            <iter result="PASSED">
                <arg name="env">{{{'pco_iut':IUT}}}</arg>
                <notes/>
            </iter>
        </test>
        <test name="key" type="script">
            <objective>Check that key management routines work correctly</objective>

            <iter result="PASSED">
                <arg name="env">{{{'pco_iut':IUT}}}</arg>
                <notes/>
            </iter>
        </test>

        <test name="loadavg" type="script">
            <objective>objective Check that TAPI functions get loadavg information from Configurator.</objective>

            <iter result="PASSED">
                <notes/>
            </iter>
        </test>

        <test name="oid" type="script">
            <objective>Testing OID parsing and comparison correctness</objective>
            <notes/>
            <iter result="PASSED">
                <notes/>
            </iter>
        </test>

        <test name="partial_restore" type="script">
            <objective>Check configurator partial restoring works correctly</objective>

            <iter result="PASSED">
                <arg name="env"/>
                <arg name="oid_name"/>
                <notes/>
            </iter>
        </test>

        <test name="pci" type="script">
            <objective>Check that PCI management routines work correctly</objective>

            <iter result="PASSED">
                <arg name="env">{{{'pco_iut':IUT}}}</arg>
                <notes/>
            </iter>
        </test>

        <test name="set_restore" type="script">
            <objective>Check configurator set and rollback by accessing /proc/sys</objective>
            <notes/>
            <iter result="FAILED">
                <arg name="env">{{{'pco_iut':IUT}}}</arg>
                <arg name="oid_name"/>
                <arg name="restore">FALSE</arg>
                <arg name="rollback">none</arg>
                <notes/>
            </iter>
            <iter result="PASSED">
                <arg name="env">{{{'pco_iut':IUT}}}</arg>
                <arg name="oid_name"/>
                <arg name="restore">TRUE</arg>
                <arg name="rollback">none</arg>
                <notes/>
            </iter>
            <iter result="PASSED">
                <arg name="env">{{{'pco_iut':IUT}}}</arg>
                <arg name="oid_name"/>
                <arg name="restore"/>
                <arg name="rollback">backup</arg>
                <notes/>
            </iter>
            <iter result="PASSED">
                <arg name="env">{{{'pco_iut':IUT}}}</arg>
                <arg name="oid_name"/>
                <arg name="restore"/>
                <arg name="rollback">nohistory</arg>
                <notes/>
            </iter>
        </test>

        <test name="vm" type="script">
            <objective>Check that virtual machine may be created and test agent started on it.</objective>
            <notes/>
            <iter result="PASSED">
                <notes/>
            </iter>
        </test>
        <test name="process" type="script">
            <objective>Check processes support in Configurator</objective>
            <notes/>
            <iter result="PASSED">
                <notes/>
            </iter>
        </test>
        <test name="process_autorestart" type="script">
            <objective>Check processes autorestart support in Configurator</objective>

            <notes/>
            <iter result="PASSED">
                <notes/>
            </iter>
        </test>
        <test name="process_ping" type="script">
            <objective>Check support for killing and waiting processes in Configurator</objective>
            <notes/>
            <iter result="PASSED">
                <notes/>
            </iter>
        </test>

        <test name="uname" type="script">
            <objective>Check that TA reports its uname info properly.</objective>

            <iter result="PASSED">
                <arg name="env" />
                <notes/>
            </iter>
        </test>

        <test name="num_jobs" type="script">
            <objective>Check that job number counts correctly.</objective>

            <iter result="PASSED">
                <arg name="env"/>
                <arg name="value">4</arg>
                <arg name="factor">0</arg>
                <arg name="type">-</arg>
                <arg name="divisor">0</arg>
                <arg name="displacement">0</arg>
                <arg name="max">0</arg>
                <arg name="min">0</arg>
            </iter>
            <iter result="PASSED">
                <arg name="env"/>
                <arg name="value">0</arg>
                <arg name="factor">0</arg>
                <arg name="type">ncores</arg>
                <arg name="divisor">0</arg>
                <arg name="displacement">0</arg>
                <arg name="max">0</arg>
                <arg name="min">0</arg>
            </iter>
            <iter result="PASSED">
                <arg name="env"/>
                <arg name="value">0</arg>
                <arg name="factor">2</arg>
                <arg name="type">nproc</arg>
                <arg name="divisor">0</arg>
                <arg name="displacement">0</arg>
                <arg name="max">0</arg>
                <arg name="min">0</arg>
            </iter>
            <iter result="PASSED">
                <arg name="env"/>
                <arg name="value">0</arg>
                <arg name="factor">2</arg>
                <arg name="type">nproc</arg>
                <arg name="divisor">2</arg>
                <arg name="displacement">0</arg>
                <arg name="max">0</arg>
                <arg name="min">0</arg>
            </iter>
            <iter result="PASSED">
                <arg name="env"/>
                <arg name="value">0</arg>
                <arg name="factor">0</arg>
                <arg name="type">ncores</arg>
                <arg name="divisor">0</arg>
                <arg name="displacement">-5</arg>
                <arg name="max">0</arg>
                <arg name="min">0</arg>
            </iter>
            <iter result="PASSED">
                <arg name="env"/>
                <arg name="value">0</arg>
                <arg name="factor">0</arg>
                <arg name="type">ncores</arg>
                <arg name="divisor">0</arg>
                <arg name="displacement">2</arg>
                <arg name="max">0</arg>
                <arg name="min">0</arg>
            </iter>
            <iter result="PASSED">
                <arg name="env"/>
                <arg name="value">0</arg>
                <arg name="factor">0</arg>
                <arg name="type">nproc</arg>
                <arg name="divisor">0</arg>
                <arg name="displacement">0</arg>
                <arg name="max">5</arg>
                <arg name="min">0</arg>
            </iter>
            <iter result="PASSED">
                <arg name="env"/>
                <arg name="value">0</arg>
                <arg name="factor">0</arg>
                <arg name="type">nproc</arg>
                <arg name="divisor">0</arg>
                <arg name="displacement">6</arg>
                <arg name="max">5</arg>
                <arg name="min">0</arg>
            </iter>
            <iter result="PASSED">
                <arg name="env"/>
                <arg name="value">0</arg>
                <arg name="factor">0</arg>
                <arg name="type">ncores</arg>
                <arg name="divisor">0</arg>
                <arg name="displacement">0</arg>
                <arg name="max">0</arg>
                <arg name="min">3</arg>
            </iter>
            <iter result="PASSED">
                <arg name="env"/>
                <arg name="value">0</arg>
                <arg name="factor">0</arg>
                <arg name="type">ncores</arg>
                <arg name="divisor">0</arg>
                <arg name="displacement">5</arg>
                <arg name="max">0</arg>
                <arg name="min">3</arg>
            </iter>
            <iter result="PASSED">
                <arg name="env"/>
                <arg name="value">0</arg>
                <arg name="factor">2</arg>
                <arg name="type">nproc</arg>
                <arg name="divisor">3</arg>
                <arg name="displacement">2</arg>
                <arg name="max">5</arg>
                <arg name="min">2</arg>
            </iter>
        </test>

        <test name="unused_backup" type="script">
            <objective>Check that unused configuration backup does not break configuration tree handling</objective>
            <notes/>
            <iter result="PASSED">
                <arg name="env"/>
                <notes/>
            </iter>
        </test>

        <test name="user" type="script">
            <objective>Check that user management routines work correctly</objective>
            <notes/>
            <iter result="PASSED">
                <arg name="env"/>
                <arg name="uid"/>
                <notes/>
            </iter>
        </test>

        <test name="ts_subtree" type="script">
            <objective>Check that TS-provided subtrees work correctly</objective>
            <notes/>
            <iter result="PASSED">
                <arg name="env"/>
                <notes/>
            </iter>
        </test>
    </iter>
</test>
